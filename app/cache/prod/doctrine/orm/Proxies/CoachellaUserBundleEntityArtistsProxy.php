<?php

namespace Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class CoachellaUserBundleEntityArtistsProxy extends \Coachella\UserBundle\Entity\Artists implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function getOptions()
    {
        $this->__load();
        return parent::getOptions();
    }

    public function setName($name)
    {
        $this->__load();
        return parent::setName($name);
    }

    public function getName()
    {
        $this->__load();
        return parent::getName();
    }

    public function setDescription($description)
    {
        $this->__load();
        return parent::setDescription($description);
    }

    public function getDescription()
    {
        $this->__load();
        return parent::getDescription();
    }

    public function setStageId($stage_id)
    {
        $this->__load();
        return parent::setStageId($stage_id);
    }

    public function getStageId()
    {
        $this->__load();
        return parent::getStageId();
    }

    public function setStartTime($startTime)
    {
        $this->__load();
        return parent::setStartTime($startTime);
    }

    public function getStartTime()
    {
        $this->__load();
        return parent::getStartTime();
    }

    public function setEndTime($endTime)
    {
        $this->__load();
        return parent::setEndTime($endTime);
    }

    public function getEndTime()
    {
        $this->__load();
        return parent::getEndTime();
    }

    public function setCreated($created)
    {
        $this->__load();
        return parent::setCreated($created);
    }

    public function getCreated()
    {
        $this->__load();
        return parent::getCreated();
    }

    public function setModified($modified)
    {
        $this->__load();
        return parent::setModified($modified);
    }

    public function getModified()
    {
        $this->__load();
        return parent::getModified();
    }

    public function setStage(\Coachella\UserBundle\Entity\Stages $stage)
    {
        $this->__load();
        return parent::setStage($stage);
    }

    public function getStage()
    {
        $this->__load();
        return parent::getStage();
    }

    public function getAbsolutePath($type)
    {
        $this->__load();
        return parent::getAbsolutePath($type);
    }

    public function getWebPath($type)
    {
        $this->__load();
        return parent::getWebPath($type);
    }

    public function upload()
    {
        $this->__load();
        return parent::upload();
    }

    public function addMylineup(\Coachella\UserBundle\Entity\MyLineup $mylineup)
    {
        $this->__load();
        return parent::addMylineup($mylineup);
    }

    public function getMylineup()
    {
        $this->__load();
        return parent::getMylineup();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'name', 'description', 'stage_id', 'start_time', 'end_time', 'created', 'modified', 'stage');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}